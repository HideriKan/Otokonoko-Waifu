//Base
const { Command } = require("discord.js-commando");

//API
const snekfech = require("snekfetch");
const api = "";

//Embed
const { RichEmbed } = require("discord.js");

//Datebase
const path = require("path");
const sqlite = require("better-sqlite3");
const db = new sqlite(path.join(__dirname,"database.sqlite3"));

//USEFULL
const trim = (str, max) => (str.length > max) ? `${str.slice(0, max-3)}...` : str; // will cut the string if it will go over the max

module.exports = class xCommand extends Command {
	constructor(client) {
		super(client, {
			name: "",
			memberName: "",
			group: "",
			description: "",
			throttling: {
				usages: 1, // in the time frame
				duration: 3 // in seconds
			},
			aliases: [],
			examples: [],
			details: "",

		});
	}
	run(msg, args) {

	}
};

module.exports = class xCommand extends Command {
	constructor(client) {
		super(client, {
			name: "",
			memberName: "",
			group: "",
			description: "",
			throttling: {
				usages: 1, // in the time frame
				duration: 3 // in seconds
			},
			aliases: [],
			examples: [],
			details: "",

			guildOnly: true,
			guarded: true,
			nsfw: true,
			ownerOnly: true,
			userPermissions: [],
			clientPermissions: [], //https://discordapp.com/developers/docs/topics/permissions	
			
			argsSingleQuotes: true,
			argsCount: 1, // max numbers
			args: [{
				key: "text",
				prompt: "What text would you like the bot to say?",
				type: "string", // https://discord.js.org/#/docs/commando/master/class/CommandRegistry?scrollTo=registerDefaultTypes
				validate: text => {},
				default: "",
				wait: 30,
			}]
		});
	}

	run(msg, args) {

	}
};